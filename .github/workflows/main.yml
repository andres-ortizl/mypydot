name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
jobs:
  ci:
    name: ci-pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Code Lint
        uses: py-actions/flake8@v1

      - name: Dockerfile Lint
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: Dockerfile

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.11

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/main.yml') }}

      - name: Set Poetry config
        run: |
          poetry config virtualenvs.create false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run Tests
        run: |
          PYTHONPATH=mypydot/ poetry run pytest --cov --cov-report=xml 
          sed -i 's/\/home\/runner\/work\/mypydot\/mypydot\//\/github\/workspace\//g' coverage.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}